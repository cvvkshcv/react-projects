{"version":3,"sources":["Test.js","reportWebVitals.js","index.js"],"names":["Test","useState","name","setName","response","setResponse","className","style","width","onSubmit","e","preventDefault","axios","get","then","res","data","value","onChange","target","type","placeholder","country","length","alt","src","map","country_id","probability","toFixed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAyFeA,MAtFf,WAEE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KAUA,OACE,qBAAKC,UAAU,oEAAf,SACE,sBAAKA,UAAU,uBAAuBC,MAAO,CAAEC,MAAO,SAAtD,UACE,qBAAKF,UAAU,0CAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBAAMA,UAAU,eAAeG,SAb1B,SAACC,GACdA,EAAEC,iBACFN,EAAY,MACZO,IAAMC,IAAI,oCAAsCX,GAAMY,MAAK,SAAAC,GACzDV,EAAYU,EAAIC,UASV,UACE,uBACEC,MAAOf,EACPgB,SAAU,SAACR,GAAD,OAAOP,EAAQO,EAAES,OAAOF,QAElCG,KAAK,SACL,aAAW,SACXd,UAAU,oBACVe,YAAY,oBAEd,wBAAQf,UAAU,wBAAlB,4BAON,oBAAIA,UAAU,wBAAd,yDACA,wBAEW,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUkB,QAAQC,QAAS,EAC1B,qBACEC,IAAI,MACJlB,UAAU,sDACVmB,IAAI,gEAGN,qBACED,IAAI,MACJlB,UAAU,sDACVmB,IAAI,+FAIV,qBAAKnB,UAAU,YAAf,SAEkC,KAArB,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUkB,QAAQC,QACjB,iDAEF,mCACE,oBAAIjB,UAAU,kBAAd,WAEa,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUkB,UAAW,IAAII,KAAI,SAAAJ,GAC5B,OACE,qBACEhB,UAAU,iDADZ,UAIE,qBAAKA,UAAU,eAAf,SACE,qBAAKA,UAAU,UAAf,SAA2BgB,EAAQK,eAErC,uBAAMrB,UAAU,gCAAhB,WAC2B,IAAtBgB,EAAQM,aAAmBC,QAAQ,GADxC,UALKP,EAAQK,2BCvDtBG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4b071b01.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nfunction Test() {\r\n\r\n  const [name, setName] = useState('');\r\n  const [response, setResponse] = useState();\r\n\r\n  const search = (e) => {\r\n    e.preventDefault();\r\n    setResponse(null);\r\n    axios.get('https://api.nationalize.io/?name=' + name).then(res => {\r\n      setResponse(res.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='vh-100 container d-flex justify-content-center align-items-center'>\r\n      <div className=\"card shadow border-0\" style={{ width: '25rem' }}>\r\n        <nav className=\"navbar navbar-light navbar-dark bg-dark\">\r\n          <div className=\"container-fluid\">\r\n            <form className=\"d-flex w-100\" onSubmit={search}>\r\n              <input \r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                \r\n                type=\"search\"\r\n                aria-label=\"Search\"\r\n                className=\"form-control me-2\"\r\n                placeholder=\"Enter your name\"\r\n              />\r\n              <button className=\"btn btn-outline-light\">\r\n                Predict\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </nav>\r\n\r\n        <h3 className='text-center my-2 px-3'>Tell your name, I will predict your country</h3>\r\n        <hr />\r\n        {\r\n          (response?.country.length > 0) ?\r\n            <img\r\n              alt=\"...\"\r\n              className=\"card-img-top w-50 p-3 center mx-auto rounded-circle\"\r\n              src=\"https://media4.giphy.com/media/VDMaWsMMU8yEryB1fQ/giphy.gif\"\r\n            />\r\n          :\r\n            <img\r\n              alt=\"...\"\r\n              className=\"card-img-top w-50 p-3 center mx-auto rounded-circle\"\r\n              src=\"https://pluspng.com/img-png/png-user-icon-person-icon-png-people-person-user-icon-2240.png\"\r\n            />\r\n        }\r\n\r\n        <div className=\"card-body\">\r\n          {\r\n            (response?.country.length === 0) ?\r\n              <h3>No result found</h3>\r\n            :\r\n            <>\r\n              <ul className=\"list-group mb-2\">\r\n                {\r\n                  (response?.country || []).map(country => {\r\n                    return (\r\n                      <li\r\n                        className=\"list-group-item d-flex justify-content-between\"\r\n                        key={country.country_id}\r\n                      >\r\n                        <div className=\"ms-2 me-auto\">\r\n                          <div className=\"fw-bold\">{ country.country_id }</div>\r\n                        </div>\r\n                        <span className=\"badge bg-primary rounded-pill\">\r\n                          { (country.probability * 100).toFixed(2) } %\r\n                        </span>\r\n                      </li>)\r\n                    \r\n                  })\r\n                }\r\n              </ul>\r\n            </>\r\n          }\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Test","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import App from './App';\r\nimport Test from './Test';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <App /> */}\r\n    <Test />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}